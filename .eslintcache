[{"D:\\Projects\\expense-tracker\\src\\index.js":"1","D:\\Projects\\expense-tracker\\src\\App.js":"2","D:\\Projects\\expense-tracker\\src\\styles.js":"3","D:\\Projects\\expense-tracker\\src\\components\\Details\\styles.js":"4","D:\\Projects\\expense-tracker\\src\\components\\Main\\styles.js":"5","D:\\Projects\\expense-tracker\\src\\components\\Main\\Form\\styles.js":"6","D:\\Projects\\expense-tracker\\src\\components\\Main\\List\\styles.js":"7","D:\\Projects\\expense-tracker\\src\\context\\context.js":"8","D:\\Projects\\expense-tracker\\src\\components\\Details\\Details.js":"9","D:\\Projects\\expense-tracker\\src\\components\\Main\\Main.js":"10","D:\\Projects\\expense-tracker\\src\\context\\contextReducer.js":"11","D:\\Projects\\expense-tracker\\src\\components\\Main\\Form\\Form.js":"12","D:\\Projects\\expense-tracker\\src\\components\\Main\\List\\List.js":"13","D:\\Projects\\expense-tracker\\src\\constants\\categories.js":"14","D:\\Projects\\expense-tracker\\src\\utils\\formatDate.js":"15","D:\\Projects\\expense-tracker\\src\\useTransactions.js":"16","D:\\Projects\\expense-tracker\\src\\components\\Snackbar\\Snackbar.js":"17","D:\\Projects\\expense-tracker\\src\\components\\Snackbar\\styles.js":"18","D:\\Projects\\expense-tracker\\src\\components\\InfoCard.js":"19"},{"size":430,"mtime":1610177908490,"results":"20","hashOfConfig":"21"},{"size":1590,"mtime":1610352074415,"results":"22","hashOfConfig":"21"},{"size":582,"mtime":1609733947848,"results":"23","hashOfConfig":"21"},{"size":247,"mtime":1609733354196,"results":"24","hashOfConfig":"21"},{"size":514,"mtime":1609755462898,"results":"25","hashOfConfig":"21"},{"size":247,"mtime":1609772434488,"results":"26","hashOfConfig":"21"},{"size":416,"mtime":1609772472753,"results":"27","hashOfConfig":"21"},{"size":1017,"mtime":1610329993594,"results":"28","hashOfConfig":"21"},{"size":684,"mtime":1610158996093,"results":"29","hashOfConfig":"21"},{"size":1256,"mtime":1610351748517,"results":"30","hashOfConfig":"21"},{"size":655,"mtime":1610328869688,"results":"31","hashOfConfig":"21"},{"size":5185,"mtime":1610330896491,"results":"32","hashOfConfig":"21"},{"size":1717,"mtime":1610023204749,"results":"33","hashOfConfig":"21"},{"size":1765,"mtime":1610023318153,"results":"34","hashOfConfig":"21"},{"size":330,"mtime":1610024471762,"results":"35","hashOfConfig":"21"},{"size":1153,"mtime":1610158953279,"results":"36","hashOfConfig":"21"},{"size":901,"mtime":1610330699276,"results":"37","hashOfConfig":"21"},{"size":206,"mtime":1609755489858,"results":"38","hashOfConfig":"21"},{"size":431,"mtime":1610351058888,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1n6jg31",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\expense-tracker\\src\\index.js",[],["80","81"],"D:\\Projects\\expense-tracker\\src\\App.js",[],"D:\\Projects\\expense-tracker\\src\\styles.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Details\\styles.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Main\\styles.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Main\\Form\\styles.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Main\\List\\styles.js",[],"D:\\Projects\\expense-tracker\\src\\context\\context.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Details\\Details.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Main\\Main.js",[],"D:\\Projects\\expense-tracker\\src\\context\\contextReducer.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Main\\Form\\Form.js",["82"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\n\r\nimport CustomizedSnackBar from \"../../Snackbar/Snackbar\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\r\n      return;\r\n\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n\r\n    setOpen(true);\r\n    addTransaction(transaction);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const seletedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackBar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && segment.words.map((w) => w.value).join(\" \")}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {seletedCategories.map((category) => (\r\n              <MenuItem value={category.type} key={category.type}>\r\n                {category.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Amount\"\r\n          fullWidth\r\n          value={formData.amount}\r\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"date\"\r\n          label=\"Date\"\r\n          fullWidth\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\Projects\\expense-tracker\\src\\components\\Main\\List\\List.js",[],"D:\\Projects\\expense-tracker\\src\\constants\\categories.js",[],"D:\\Projects\\expense-tracker\\src\\utils\\formatDate.js",[],"D:\\Projects\\expense-tracker\\src\\useTransactions.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Snackbar\\Snackbar.js",[],"D:\\Projects\\expense-tracker\\src\\components\\Snackbar\\styles.js",[],"D:\\Projects\\expense-tracker\\src\\components\\InfoCard.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":107,"column":6,"nodeType":"89","endLine":107,"endColumn":15,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"96","text":"97"},[2986,2995],"[createTransaction, formData, segment]"]